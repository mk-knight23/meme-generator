{"version":3,"sources":["Footer.js","Header.js","MemeGenerator.js","App.js","index.js"],"names":["Footer","Header","MemeGenerator","state","topText","bottomText","randomImage","allMemeImgs","handleChange","bind","generate","fetch","then","response","json","memes","data","console","log","setState","prevState","e","target","name","value","this","imageArrayLength","length","randomNumber","Math","floor","random","url","preventDefault","className","onSubmit","type","placeholder","onChange","src","alt","React","Component","App","rootEl","document","getElementById","ReactDOM","render"],"mappings":"0MAUeA,MARf,WACI,OACI,iCACI,qDCKGC,MARf,WACE,OACE,iCACE,wD,kDCHeC,E,kDACnB,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,QAAS,GACTC,WAAY,GACZC,YAAa,gCACbC,YAAa,IAEf,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBATJ,E,gEAYO,IAAD,OAClBE,MAAM,qCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GAAc,IACXE,EAAUF,EAASG,KAAnBD,MACRE,QAAQC,IAAIH,EAAM,IAClB,EAAKI,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,IAEEb,YAAaQ,Y,mCAMVM,GAAI,IAAD,EACUA,EAAEC,OAAlBC,EADM,EACNA,KAAMC,EADA,EACAA,MACdC,KAAKN,UAAS,SAACC,GACb,OAAO,eACJG,EAAOC,Q,+BAKLH,GACP,IAAMK,EAAmBD,KAAKtB,MAAMI,YAAYoB,OAC1CC,EAAeC,KAAKC,MAAMD,KAAKE,SAAWL,GAChDD,KAAKN,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,IAEEd,YAAac,EAAUb,YAAYqB,GAAcI,SAGrDX,EAAEY,mB,+BAIF,OACE,gCACE,uBAAMC,UAAU,YAAYC,SAAUV,KAAKf,SAA3C,UACE,uBACE0B,KAAK,OACLb,KAAK,UACLc,YAAY,WACZb,MAAOC,KAAKtB,MAAMC,QAClBkC,SAAUb,KAAKjB,eAEjB,uBACE4B,KAAK,OACLb,KAAK,aACLc,YAAY,cACZb,MAAOC,KAAKtB,MAAME,WAClBiC,SAAUb,KAAKjB,eAEjB,iDAEF,sBAAK0B,UAAU,OAAf,UACE,qBAAKK,IAAKd,KAAKtB,MAAMG,YAAakC,IAAI,KACtC,oBAAIN,UAAU,MAAd,SAAqBT,KAAKtB,MAAMC,UAChC,oBAAI8B,UAAU,SAAd,SAAwBT,KAAKtB,MAAME,uB,GAxEFoC,IAAMC,WCalCC,MAVf,WACE,OACE,sBAAKT,UAAU,gBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCLAU,G,MAASC,SAASC,eAAe,SAEvCC,IAASC,OAAO,cAAC,EAAD,IAASJ,K","file":"static/js/main.f5a9cc57.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <h1>THIS IS A FOOTER</h1>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <p>Meme Generator BY MK</p>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport default class MemeGenerator extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      topText: '',\r\n      bottomText: '',\r\n      randomImage: 'http://i.imgflip.com/1bij.jpg',\r\n      allMemeImgs: [],\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.generate = this.generate.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://api.imgflip.com/get_memes')\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        const { memes } = response.data;\r\n        console.log(memes[0]);\r\n        this.setState((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            allMemeImgs: memes,\r\n          };\r\n        });\r\n      });\r\n  }\r\n\r\n  handleChange(e) {\r\n    const { name, value } = e.target;\r\n    this.setState((prevState) => {\r\n      return {\r\n        [name]: value,\r\n      };\r\n    });\r\n  }\r\n\r\n  generate(e) {\r\n    const imageArrayLength = this.state.allMemeImgs.length;\r\n    const randomNumber = Math.floor(Math.random() * imageArrayLength);\r\n    this.setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        randomImage: prevState.allMemeImgs[randomNumber].url,\r\n      };\r\n    });\r\n    e.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className='meme-form' onSubmit={this.generate}>\r\n          <input\r\n            type='text'\r\n            name='topText'\r\n            placeholder='Top Text'\r\n            value={this.state.topText}\r\n            onChange={this.handleChange}\r\n          />\r\n          <input\r\n            type='text'\r\n            name='bottomText'\r\n            placeholder='Bottom Text'\r\n            value={this.state.bottomText}\r\n            onChange={this.handleChange}\r\n          />\r\n          <button>Generate</button>\r\n        </form>\r\n        <div className='meme'>\r\n          <img src={this.state.randomImage} alt='' />\r\n          <h2 className='top'>{this.state.topText}</h2>\r\n          <h2 className='bottom'>{this.state.bottomText}</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Footer from './Footer';\r\nimport Header from './Header';\r\nimport MemeGenerator from './MemeGenerator';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='app-container'>\r\n      <Header />\r\n      <MemeGenerator />\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './style.css';\r\n\r\nconst rootEl = document.getElementById('root');\r\n\r\nReactDOM.render(<App />, rootEl);\r\n"],"sourceRoot":""}